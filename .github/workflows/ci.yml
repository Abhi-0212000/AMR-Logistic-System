name: ROS2 CI
on:
  push:
    # branches: [ main, develop ]
  pull_request:
    # branches: [ main, develop ]
jobs:
  build_and_test:
    runs-on: ubuntu-22.04
    container:
      image: ros:humble
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup workspace
      shell: bash
      run: |
        source /opt/ros/humble/setup.bash
        mkdir -p ~/ros2_ws/src
        cp -r $GITHUB_WORKSPACE ~/ros2_ws/src
        
    - name: Install dependencies
      shell: bash
      run: |
        cd ~/ros2_ws
        apt-get update
        apt-get install -y python3-pip flake8
        rosdep update
        rosdep install --from-paths src --ignore-src -r -y
        
        # Install linting tools
        pip3 install black flake8 pylint
        
    - name: Build
      shell: bash
      run: |
        cd ~/ros2_ws
        source /opt/ros/humble/setup.bash
        colcon build
        
    - name: Linting and format check for python
      shell: bash
      run: |
        cd ~/ros2_ws
        source /opt/ros/humble/setup.bash
        source install/setup.bash
        
        # Create logs directory
        mkdir -p ~/ros2_ws/src/AMR-Logistic-System/lint_logs
        cd ~/ros2_ws/src/AMR-Logistic-System/
        
        # Python linting
        echo "Running Python linting checks..."
        flake8 .
        black . --check --verbose --line-length=99

    - name: Linting and format check for python
      shell: bash
      run: |
        set -e
        cd ~/ros2_ws
        source /opt/ros/humble/setup.bash
        source install/setup.bash

        # C++ linting using ament tools
        echo "Running C++ linting checks..."
        cd ~/ros2_ws
        ament_uncrustify --xunit-file ~/ros2_ws/src/lint_logs/uncrustify_format.xml src || true
        ament_cpplint --xunit-file ~/ros2_ws/src/lint_logs/cpplint_format.xml src || true
  
    - name: Run tests
      shell: bash
      run: |
        cd ~/ros2_ws
        source /opt/ros/humble/setup.bash
        source install/setup.bash
        
        # Run tests
        colcon test --event-handlers console_cohesion+
        colcon test-result --all --verbose
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ~/ros2_ws/build/*/test_results